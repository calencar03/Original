

Resumo comandos GitHub
---------------------------------------------------------

Criando um novo repositorio - crie uma nova pasta , abra-a e execute o comando git init para criar um novo repositorio .

Obtenha um repositorio - crie uma cópia de trabalho em um repositorio local executando o comando git clone /caminho/para/o/repositorio
quando usar um servidor remoto, seu comando será git clone usuário@servidor:/caminho/para/o/repositório .
-

Adicionar e confirmar - Você pode propor mudanças (adicioná-las ao Index) usandogit add <arquivo>git add *
Este é o primeiro passo no fluxo de trabalho básico do git. Para realmente confirmar estas mudanças (isto é, fazer um commit), use
git commit -m "comentários das alterações" Agora o arquivo é enviado para o HEAD, mas ainda não para o repositório remoto.
-

Enviando alterações - Suas alterações agora estão no HEAD da sua cópia de trabalho local. Para enviar estas alterações ao seu repositório remoto, execute 
git push origin master
Altere master para qualquer ramo (branch) desejado, enviando suas alterações para ele. 
Se você não clonou um repositório existente e quer conectar seu repositório a um servidor remoto, você deve adicioná-lo com
git remote add origin <servidor>
Agora você é capaz de enviar suas alterações para o servidor remoto selecionado.
-

Atualizando e mesclar - para atualizar seu repositório local com a mais nova versão, execute git pull
na sua pasta de trabalho para obter e fazer merge (mesclar) alterações remotas.
para fazer merge de um outro branch ao seu branch ativo (ex. master), use git merge <branch>
em ambos os casos o git tenta fazer o merge das alterações automaticamente. Infelizmente, isto nem sempre é possível e resulta em conflitos. 
Você é responsável por fazer o merge estes conflitos manualmente editando os arquivos exibidos pelo git. Depois de alterar,
você precisa marcá-los como merged com
git add <arquivo> antes de fazer o merge das alterações, você pode também pré-visualizá-as usando git diff <branch origem> <branch destino>

